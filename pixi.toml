# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: toml -*-

#                             VVVVVV  minimum `pixi` version
"$schema" = "https://pixi.sh/v0.36.0/schema/manifest/schema.json"

[project]
name = "gstreamer-feedstock"
version = "3.50.0"  # conda-smithy version used to generate this file
description = "Pixi configuration for conda-forge/gstreamer-feedstock"
authors = ["@conda-forge/gstreamer"]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "linux-ppc64le", "osx-64", "osx-arm64", "win-64"]

[dependencies]
conda-build = ">=24.1"
conda-forge-ci-setup = "4.*"
rattler-build = "*"

[tasks]
[tasks.inspect-all]
cmd = "inspect_artifacts --all-packages"
description = "List contents of all packages found in rattler-build build directory."
[tasks.build]
cmd = "rattler-build build --recipe recipe"
description = "Build gstreamer-feedstock directly (without setup scripts), no particular variant specified"
[tasks."build-osx_arm64_"]
cmd = "rattler-build build --recipe recipe -m .ci_support/osx_arm64_.yaml"
description = "Build gstreamer-feedstock with variant osx_arm64_ directly (without setup scripts)"
[tasks."inspect-osx_arm64_"]
cmd = "inspect_artifacts --recipe-dir recipe -m .ci_support/osx_arm64_.yaml"
description = "List contents of gstreamer-feedstock packages built for variant osx_arm64_"

[feature.smithy.dependencies]
conda-smithy = "*"
[feature.smithy.tasks.build-locally]
cmd = "python ./build-locally.py"
description = "Build packages locally using the same setup scripts used in conda-forge's CI"
[feature.smithy.tasks.smithy]
cmd = "conda-smithy"
description = "Run conda-smithy. Pass necessary arguments."
[feature.smithy.tasks.rerender]
cmd = "conda-smithy rerender"
description = "Rerender the feedstock."
[feature.smithy.tasks.lint]
cmd = "conda-smithy lint --conda-forge recipe"
description = "Lint the feedstock recipe"

[environments]
smithy = ["smithy"]
# This is a copy of default, to be enabled by build_steps.sh during Docker builds
# __PLATFORM_SPECIFIC_ENV__ = []
